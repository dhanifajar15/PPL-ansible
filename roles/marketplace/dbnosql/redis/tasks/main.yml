# CloudBoz - Redis Install
- name: "install redis"
  become_user: "{{ ansible_user }}"
  community.docker.docker_container:
    name: "{{ redis_docker_name }}"
    image: "{{ redis_docker_image }}:{{ redis_docker_tag }}"
    networks:
      - name: cloudboz-network
    volumes:
      - "/cloudboz/{{ redis_docker_name }}-data:/var/lib/redis"
    restart_policy: always
    env:
      REDIS_PASSWORD: "{{ redis_docker_env_root_password }}"
    ports:
      - "{{ redis_docker_ports }}:6379"
  tags:
    - install-redis

# CloudBoz - Redis Firewall Install
# - name: "'{{ ufw_rule }}' port '{{ redis_docker_ports }}'"
#   community.general.ufw:
#     rule: "{{ ufw_rule }}"
#     port: "{{ item }}"
#     proto: tcp
#   loop:
#     - "{{ redis_docker_ports | quote }}"
#   tags:
#     - install-redis

# CloudBoz - Redis Uninstall
- name: "uninstall redis"
  become_user: "{{ ansible_user }}"
  community.docker.docker_container:
    name: "{{ redis_docker_name }}"
    state: absent
  tags:
    - uninstall-redis

# CloudBoz - Redis Firewall Uninstall
# - name: "'{{ ufw_rule }}' port '{{ redis_docker_ports }}'"
#   community.general.ufw:
#     rule: "{{ ufw_rule }}"
#     port: "{{ item }}"
#     proto: tcp
#     delete: yes
#   loop:
#     - "{{ redis_docker_ports | quote }}"
#   tags:
#     - uninstall-redis

# CloudBoz - Redis Uninstall with Data
- name: "uninstall redis data"
  become_user: "{{ ansible_user }}"
  shell: "sudo rm -fr /cloudboz/{{ redis_docker_name }}-data"
  tags:
    - uninstall-redis-data