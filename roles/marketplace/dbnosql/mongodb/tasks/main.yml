# CloudBoz - MongoDB Install
- name: "install mongodb"
  become_user: "{{ ansible_user }}"
  community.docker.docker_container:
    name: "{{ mongodb_docker_name }}"
    image: "{{ mongodb_docker_image }}:{{ mongodb_docker_tag }}"
    networks:
      - name: cloudboz-network
    volumes:
      - "/cloudboz/{{ mongodb_docker_name }}-data:/data/db"
    restart_policy: always
    ports:
      - "{{ mongodb_docker_ports }}:27017"
    env:
      MONGO_INITDB_ROOT_USERNAME: "{{ mongodb_docker_env_root_username }}"
      MONGO_INITDB_ROOT_PASSWORD: "{{ mongodb_docker_env_root_password }}"
  tags:
    - install-mongodb

# CloudBoz - MongoDB Firewall Install
# - name: "'{{ ufw_rule }}' port '{{ mongodb_docker_ports }}'"
#   community.general.ufw:
#     rule: "{{ ufw_rule }}"
#     port: "{{ item }}"
#     proto: tcp
#   loop:
#     - "{{ mongodb_docker_ports | quote }}"
#   tags:
#     - install-mongodb

# CloudBoz - MongoDB Uninstall
- name: "uninstall mongodb"
  become_user: "{{ ansible_user }}"
  community.docker.docker_container:
    name: "{{ mongodb_docker_name }}"
    state: absent
  tags:
    - uninstall-mongodb

# CloudBoz - MongoDB Firewall Uninstall
# - name: "'{{ ufw_rule }}' port '{{ mongodb_docker_ports }}'"
#   community.general.ufw:
#     rule: "{{ ufw_rule }}"
#     port: "{{ item }}"
#     proto: tcp
#     delete: yes
#   loop:
#     - "{{ mongodb_docker_ports | quote }}"
#   tags:
#     - uninstall-mongodb

# CloudBoz - MongoDB Uninstall with Data
- name: "uninstall mongodb data"
  become_user: "{{ ansible_user }}"
  shell: "sudo rm -fr /cloudboz/{{ mongodb_docker_name }}-data"
  tags:
    - uninstall-mongodb-data