# CloudBoz - PostgreSQL Install
- name: "Install PostgreSQL Database"
  become_user: "{{ ansible_user }}"
  community.docker.docker_container:
    name: "{{ postgresql_docker_name }}"
    image: "{{ postgresql_docker_image }}:{{ postgresql_docker_tag }}"
    networks:
      - name: cloudboz-network
    restart_policy: always
    ports:
      - "{{ postgresql_docker_ports }}:5432"
    env:
      POSTGRES_USER: "{{ postgresql_docker_env_root_username }}"
      POSTGRES_PASSWORD: "{{ postgresql_docker_env_root_password }}"
    volumes:
      - "/cloudboz/{{ postgresql_docker_name }}-data:/var/lib/postgresql/data"
  tags:
    - install-postgresql

# CloudBoz - PostgreSQL Firewall Install
# - name: "'{{ ufw_rule }}' port '{{ postgresql_docker_ports }}'"
#   community.general.ufw:
#     rule: "{{ ufw_rule }}"
#     port: "{{ item }}"
#     proto: tcp
#   loop:
#     - "{{ postgresql_docker_ports | quote }}"
#   tags:
#     - install-postgresql

# CloudBoz - PostgreSQL Uninstall    
- name: "Remove PostgreSQL Database"
  become_user: "{{ ansible_user }}"
  community.docker.docker_container:
    name: "{{ postgresql_docker_name }}"
    state: absent
  tags:
    - uninstall-postgresql

# CloudBoz - PostgreSQL Firewall Uninstall
# - name: "'{{ ufw_rule }}' port '{{ postgresql_docker_ports }}'"
#   community.general.ufw:
#     rule: "{{ ufw_rule }}"
#     port: "{{ item }}"
#     proto: tcp
#     delete: yes
#   loop:
#     - "{{ postgresql_docker_ports | quote }}"
#   tags:
#     - uninstall-postgresql

# CloudBoz - PostgreSQL Uninstall with Data
- name: "uninstall postgresql data"
  become_user: "{{ ansible_user }}"
  shell: "sudo rm -fr /cloudboz/{{ postgresql_docker_name }}-data"
  tags:
    - uninstall-postgresql-data