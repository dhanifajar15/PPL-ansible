# CloudBoz - MinIO Install
- name: "install minio"
  become_user: "{{ ansible_user }}"
  community.docker.docker_container:
    name: "{{ minio_docker_name }}"
    image: "{{ minio_docker_image }}:{{ minio_docker_tag }}"
    networks:
      - name: cloudboz-network
    volumes:
      - "/cloudboz/{{ minio_docker_name }}-data:/data"
    restart_policy: always
    ports:
      - "{{ minio_docker_ports_minio }}:9000"
      - "{{ minio_docker_ports_console }}:9001"
    env:
      MINIO_ROOT_USER: "{{ minio_docker_env_username }}"
      MINIO_ROOT_PASSWORD: "{{ minio_docker_env_password }}"
    command: "server /data --console-address ':9001'"
  tags:
    - install-minio

# CloudBoz - MinIO Firewall Install
# - name: "'{{ ufw_rule }}' port '{{ minio_docker_ports }}'"
#   community.general.ufw:
#     rule: "{{ ufw_rule }}"
#     port: "{{ item }}"
#     proto: tcp
#   loop:
#     - "{{ minio_docker_ports | quote }}"
#   tags:
#     - install-minio

# CloudBoz - MinIO Uninstall
- name: "uninstall minio"
  become_user: "{{ ansible_user }}"
  community.docker.docker_container:
    name: "{{ minio_docker_name }}"
    state: absent
  tags:
    - uninstall-minio

# CloudBoz - MinIO Firewall Uninstall
# - name: "'{{ ufw_rule }}' port '{{ minio_docker_ports }}'"
#   community.general.ufw:
#     rule: "{{ ufw_rule }}"
#     port: "{{ item }}"
#     proto: tcp
#     delete: yes
#   loop:
#     - "{{ minio_docker_ports | quote }}"
#   tags:
#     - uninstall-minio

# CloudBoz - MinIO Uninstall with Data
- name: "uninstall minio data"
  become_user: "{{ ansible_user }}"
  shell: "sudo rm -fr /cloudboz/{{ minio_docker_name }}-data"
  tags:
    - uninstall-minio-data